Now we have to rotate a number. Suppose number is 25398. and k=2. Now we want output-> 98253.
Logic:
k=2
      |
2 5 3 | 9 8
      |
We have divisor and multiplier. Divisor to divide break the last two digit. As here k is 2. So we have to divide the number into 245 and 98. For this we need a divisor.
if k=2. than divisor will be 100. (divisor=10^k)

25398 % 100-> 98
Quotiant =253
Remainder=98
And we need the muliplier(length of quotiant) which will be multplied by remainder 98*1000=98000. And add quotiant.98000+253=98253.
2 special case:
1) for k is greater than the number of given digits. than k=k% totaldigits
2) for k is negative k=k+totaldigits



import java.util.Scanner;
public class HelloWorld{
    public static int count(int n)
    {
        int count=0;
        while(n!=0)
        {
            count++;
            n=n/10;
        }
        return count;
    }

     public static void main(String []args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int k=sc.nextInt();
        int total_digits=count(n);
        if(k>total_digits)
        {
            k=k%total_digits;
        }
        if(k<0)
        {
            k=k+total_digits;
        }
        
        
        int res=0;
        int mul=n%(int)Math.pow(10,k);
        int divider=n/(int)Math.pow(10,k);
        int cnt=count(divider);
        res=(mul*(int)Math.pow(10,cnt))+divider;
        System.out.println(res);
        
     }
}
