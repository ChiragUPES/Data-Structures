Same Logic followed in longest but the difference is after creating a 2D DP return the smallest value from the dp.

public static int solution(String s1, String s2) {
        int dp[][]=new int[s1.length()+1][s2.length()+1];
        int min=Tnteger.MAX_VALUE;
        for(int i=1;i<dp.length;i++)
        {
            for(int j=1;j<dp[0].length;j++)
            {
                char c1=s1.charAt(i-1);
                char c2=s2.charAt(j-1);
                if(c1!=c2)
                {
                    dp[i][j]=0;
                }else
                {
                    dp[i][j]=dp[i-1][j-1]+1;
                }
                if(dp[i][j]<min && dp[i][j]!=0)
                {
                    max=dp[i][j];
                } 
                
            }
        }
        if(min=Integer.MAX_VALUE)
        {
        return 0;
        }
        else
        {
        return min;
        }
    }
